This is an implementation of the Non-Dominated Sorting Genetic Algorithm 2
for ECJ.

Details of this approach can be found in the following paper:

Kalyanmoy Deb, Amrit Pratap, Sameer Agarwal, and T. Meyarivan. A Fast and Elitist Multiobjective Genetic Algorithm: NSGA-II in                                            IEEE Transactions On Evolutionary Computation, Vol. 6, No. 2, April 2002

http://sci2s.ugr.es/docencia/doctobio/2002-6-2-DEB-NSGA-II.pdf (PDF)


ABSTRACT 


Author of ECJ NSGA2 package: Faisal Abidi


EXAMPLES
--------

There is an example application in ec/app/moosuite2 which uses NSGA2.


How ECJ implements NSGA2
------------------------

NSGA2 is an elitist method which uses Pareto front ranks instead of composite fitness, and sparsity values to break ties.

We extend SimpleBreeder merely to append the children to the parents. Think of it as mu+lambda, where mu=lambda in the NSGA2 algorithm.
	ec.multiobjective.nsga2.NSGA2Breeder

The rank and sparsity values for each individual are handled by a revised
Evaluator class:

	ec.multiobjective.nsga2.NSGA2Evaluator

These values are stored in a revised version of MultiobjectiveFitness, where we
also have Pareto dominance comparisons with Rank and Sparsity comparisons. 

	ec.multiobjective.nsga2.NSGA2MultiobjectiveFitness

Last we have provided a simple extension of the Statistics class to provide
a bit more information about what the final population looks like.

	ec.multiobjective.nsga2.NSGA2Statistics


