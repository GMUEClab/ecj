# Copyright 2006 by Sean Luke and George Mason University
# Licensed under the Academic Free License version 3.0
# See the file "LICENSE" for more information

parent.0 = ../../gp/koza/koza.params


# Stolen from koza/params -- overwriting just
# a little for readability
# You need to create at least one function set, 
# called "f0", which your first tree will use.  

gp.fs.size = 1
gp.fs.0.name = f0

### The functions, carefully ordered :-)  (See below)

gp.fs.0.func.0 = ec.app.multiplexer.func.And
gp.fs.0.func.0.nc = nc2
gp.fs.0.func.1 = ec.app.multiplexer.func.Or
gp.fs.0.func.1.nc = nc2
gp.fs.0.func.2 = ec.app.multiplexer.func.Not
gp.fs.0.func.2.nc = nc1
gp.fs.0.func.3 = ec.app.multiplexer.func.A0
gp.fs.0.func.3.nc = nc0
gp.fs.0.func.4 = ec.app.multiplexer.func.D0
gp.fs.0.func.4.nc = nc0
gp.fs.0.func.5 = ec.app.multiplexer.func.D1
gp.fs.0.func.5.nc = nc0
gp.fs.0.func.6 = ec.app.multiplexer.func.If
gp.fs.0.func.6.nc = nc3
gp.fs.0.func.7 = ec.app.multiplexer.func.A1
gp.fs.0.func.7.nc = nc0
gp.fs.0.func.8 = ec.app.multiplexer.func.D2
gp.fs.0.func.8.nc = nc0
gp.fs.0.func.9 = ec.app.multiplexer.func.D3
gp.fs.0.func.9.nc = nc0
gp.fs.0.func.10 = ec.app.multiplexer.func.A2
gp.fs.0.func.10.nc = nc0
gp.fs.0.func.11 = ec.app.multiplexer.func.D4
gp.fs.0.func.11.nc = nc0
gp.fs.0.func.12 = ec.app.multiplexer.func.D5
gp.fs.0.func.12.nc = nc0
gp.fs.0.func.13 = ec.app.multiplexer.func.D6
gp.fs.0.func.13.nc = nc0
gp.fs.0.func.14 = ec.app.multiplexer.func.D7
gp.fs.0.func.14.nc = nc0


#
# We specify our problem here
#

eval.problem = ec.app.multiplexer.Multiplexer
eval.problem.data = ec.app.multiplexer.MultiplexerData


# Here we determine what kind of Multiplexer we're doing:

# 11-Multiplexer with IF
eval.problem.bits = 3
gp.fs.0.size = 15


