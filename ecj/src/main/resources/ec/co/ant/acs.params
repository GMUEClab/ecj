# Copyright 2019 by Sean Luke and George Mason University
# Licensed under the Academic Free License version 3.0
# See the file "LICENSE" for more information

##############################
# Ant Colony System boiler plate
##############################

# To implement ACS, we adapt ECJ's steady-state EA model to support local
# and global pheromone update rules.
parent.1 = ../../simple/simple.params
parent.0 = ../../steadystate/steadystate.params

breed =					ec.steadystate.SteadyStateBreeder

# generations =                                   200

# Population size sets the number of ants per generation
pop.subpops =	       	   	     	        1
#pop.subpop.0.size =                             20
pop.subpop.0.species =                          ec.co.ant.AntSpecies

# To use an ACO algorithm with SteadyStateEvolutionState, we need to tell it to
# throw away the population after each generation boundary.  Otherwise it will try
# to "insert" ants into a persistent population, which is not how ACO works!
steady.empty-at-generation-boundary =  		True

##############################
# AntSpecies holds the construction and update rules that define ACO algorithms
##############################
pop.subpop.0.species.fitness =                  ec.simple.SimpleFitness
pop.subpop.0.species.pheromone-table =		ec.co.ant.SimplePheromoneTable

# Further species parameters (construction-rule, update-rule, etc) must be
# set by the application.